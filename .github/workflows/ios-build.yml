name: iOS Build and Deploy

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Capacitor iOS
      run: npm install @capacitor/ios

    - name: Build web app
      run: npm run build

    - name: Copy web assets to iOS
      run: |
        npx cap copy ios
        npx cap sync ios

    - name: Install CocoaPods dependencies
      run: |
        cd ios/App
        pod install

    - name: Setup iOS certificates
      env:
        IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
      run: |
        # 프로비저닝 프로필만 설치
        echo $IOS_PROVISIONING_PROFILE_BASE64 | base64 --decode > profile.mobileprovision
        
        # 프로비저닝 프로필 설치
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        
        # UUID 확인
        /usr/libexec/PlistBuddy -c "Print :UUID" /dev/stdin <<< $(security cms -D -i profile.mobileprovision)
    - name: Build iOS Archive
      run: |
        cd ios/App
        xcodebuild -workspace App.xcworkspace \
                   -scheme App \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath App.xcarchive \
                   archive

    - name: Export IPA
      run: |
        cd ios/App
        xcodebuild -exportArchive \
                   -archivePath App.xcarchive \
                   -exportPath . \
                   -exportOptionsPlist ../../ExportOptions.plist

    - name: Upload to App Store Connect
      env:
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
      run: |
        # API 키 파일 생성
        echo "$APP_STORE_CONNECT_API_KEY" > AuthKey_$APP_STORE_CONNECT_KEY_ID.p8
        
        # App Store Connect에 업로드
        xcrun altool --upload-app \
                     --type ios \
                     --file ios/App/App.ipa \
                     --apiKey $APP_STORE_CONNECT_KEY_ID \
                     --apiIssuer $APP_STORE_CONNECT_ISSUER_ID \
                     --apiKeyPath ./AuthKey_$APP_STORE_CONNECT_KEY_ID.p8
